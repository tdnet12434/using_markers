#!/usr/bin/env python
PACKAGE = "using_markers"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("testnumsen_param",   bool_t,   0, "TEST_NUM_SENSOR",  True)
gen.add("protectprop_param",   double_t,   0, "PROTECT_PROP_ANGLE", 1.0, 0,   1.5)

gen.add("sendingGeneral",   bool_t,   0, "if true it sending and not yet response",  False)

#gen.add("int_param",    double_t,    0, "An Integer parameter", 50,  0, 100)

#SPEED NAV
gen.add("yawAutoRate_param", double_t, 0, "YAW_AUTO_RATE",        0.3, 0,   10)
gen.add("yawManualRate_param", double_t, 0, "YAW_MANUAL_RATE",    1.5, 0,   10)

gen.add("sendingSpeedNav",   bool_t,   0, "if true it sending and not yet response",  False)

#nav_inertial
gen.add("WxyGpsV_param", double_t, 0, "_w_xy_gps_v",    2.0, 0,   5.0)
gen.add("WxyGpsP_param", double_t, 0, "_w_xy_gps_p",    1.0, 0,   5.0)
gen.add("WaccBias_param", double_t, 0, "_w_acc_bias",  0.05, 0,   5.0)
gen.add("WxyResV_param", double_t, 0, "_w_xy_res_v",    0.5, 0,   5.0)
gen.add("DelayGps_param", double_t, 0, "_delay_gps",    0.2, 0,   5.0)

gen.add("sendingNavInertial",   bool_t,   0, "if true it sending and not yet response",  False)

size_enum = gen.enum([ gen.const("STABILIZE_MODE",  int_t, 0, "STABILIZE_MODE ttt"),
                       gen.const("ALT_MODE",     	int_t, 1, "ALT_MODE ttt"),
                       gen.const("OTHER_MODE",      int_t, 2, "OTHER_MODE ttt"),
                       gen.const("TAKE_OFF",      	int_t, 3, "TAKE_OFF vehicle"),
                       gen.const("VEL_HOLD",      	int_t, 4, "VEL_HOLD and poshold"),
                       gen.const("GUIDE_MODE", 		int_t, 5, "GUIDE_MODE tttt")],
                     "An enum to set size")

gen.add("MODE1", int_t, 0, "MODE remote pos 1", 0, 0, 5, edit_method=size_enum)
gen.add("MODE2", int_t, 0, "MODE remote pos 2", 1, 0, 5, edit_method=size_enum)
gen.add("MODE3", int_t, 0, "MODE remote pos 3", 4, 0, 5, edit_method=size_enum)
gen.add("MODE4", int_t, 0, "MODE remote pos 4", 0, 0, 5, edit_method=size_enum)
gen.add("MODE5", int_t, 0, "MODE remote pos 5", 3, 0, 5, edit_method=size_enum)
gen.add("MODE6", int_t, 0, "MODE remote pos 6", 1, 0, 5, edit_method=size_enum)

gen.add("sending_mode",   bool_t,   0, "if true it sending and not yet response",  False)


exit(gen.generate(PACKAGE, "using_markers", "generalconfig"))